{"version":3,"sources":["components/Title.js","components/Search.js","components/Sort.js","components/Control.js","components/Form.js","components/Item.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","state","className","Component","Search","strSearch","handleSearch","bind","handleClear","handleChange","this","onClickGo","setState","event","target","value","onChange","type","placeholder","onClick","Sort","handleSort","orderBy","orderDir","console","log","onClickSort","strSort","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Control","onClickSearchGo","Form","task_id","task_name","task_level","handleCancel","handleSubmit","updateItem","itemSelected","nextProps","item","name","level","checked","onClickSubmit","preventDefault","onClickCancel","onSubmit","htmlFor","required","Item","handleDelete","handleEdit","onClickEdit","onClickDelete","index","showElementLevel","elemLevel","List","elemItem","items","map","key","style","width","uuidv4","require","App","isShowForm","handleToggleForm","closeForm","JSON","parse","localStorage","getItem","reject","push","setItem","stringify","remove","itemsOrigin","elmForm","elmButton","filter","includes","toLowerCase","funcOrderBy","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbb0954a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Title extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           \r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page-header\">\r\n                <h1>Project 01 - ToDo List <small>ReactJS</small></h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           strSearch: ''\r\n        };\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleSearch() {\r\n        this.props.onClickGo(this.state.strSearch);\r\n    }\r\n\r\n    handleClear() {\r\n        this.setState({\r\n            strSearch: ''\r\n        })\r\n        this.props.onClickGo('');\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            strSearch: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <div className=\"input-group\">\r\n                <input value={this.state.strSearch} onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Search for...\" />\r\n                <span className=\"input-group-append\">\r\n                    <button onClick={this.handleSearch} className=\"btn btn-info\" type=\"button\">Go!</button>\r\n                    <button onClick={this.handleClear} className=\"btn btn-warning\" type=\"button\">Clear!</button>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           \r\n        };\r\n\r\n        this.handleSort = this.handleSort.bind(this);\r\n    }\r\n\r\n    handleSort(orderBy, orderDir){\r\n        console.log(\"handleSort: \", orderBy + \"-\" + orderDir);\r\n        this.props.onClickSort(orderBy, orderDir );\r\n    }\r\n\r\n    render() {\r\n        let { orderBy, orderDir } = this.props;\r\n        let strSort = orderBy + \" - \" + orderDir;\r\n \r\n        return (\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Sort by\r\n                    </button>\r\n                    {/* <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\"> */}\r\n\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <li><a onClick={()=>this.handleSort('name', 'asc')} role=\"button\">Name ASC</a></li>\r\n                        <li><a onClick={()=>this.handleSort('name', 'desc')} role=\"button\">Name DESC</a></li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li><a onClick={()=>this.handleSort('level', 'asc')} role=\"button\">Level ASC</a></li>\r\n                        <li><a onClick={()=>this.handleSort('level', 'desc')} role=\"button\">Level DESC</a></li>\r\n                    </ul>\r\n                    <span className=\"badge badge-success badge-medium\"> { strSort } </span>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           \r\n        };\r\n    }\r\n\r\n    render() {\r\n        let { orderBy, orderDir } = this.props;\r\n        return (\r\n            <div className=\"col-12 col-lg-6\">\r\n                <div className=\"row\">\r\n                    <Sort \r\n                        onClickSort={ this.props.onClickSort }\r\n                        orderBy={ orderBy } \r\n                        orderDir={ orderDir } \r\n                    />\r\n                    <Search onClickGo={this.props.onClickSearchGo} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            task_id: '',\r\n            task_name: '',\r\n            task_level: 0\r\n        };\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    UNSAFE_componentWillMount(){\r\n        this.updateItem(this.props.itemSelected);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        this.updateItem(nextProps.itemSelected);\r\n    }\r\n\r\n    updateItem(item){\r\n        if(item) {\r\n            this.setState({\r\n                task_id: item.id,\r\n                task_name: item.name,\r\n                task_level: item.level,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let item = {\r\n            name: this.state.task_name,\r\n            id: this.state.task_id,\r\n            level: this.state.task_level\r\n        };\r\n        this.props.onClickSubmit(item);\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleCancel() {\r\n        this.props.onClickCancel();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-inline justify-content-between\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"sr-only\" htmlFor>label</label>\r\n                    <input value={ this.state.task_name } onChange={this.handleChange} name=\"task_name\" type=\"text\" className=\"form-control\" placeholder=\"Task Name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"sr-only\" htmlFor>label</label>\r\n                    <select value={ this.state.task_level } onChange={this.handleChange} name=\"task_level\" className=\"form-control\" required=\"required\">\r\n                        <option value={0}>Small</option>\r\n                        <option value={1}>Medium</option>\r\n                        <option value={2}>High</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                <button onClick={ this.handleCancel } type=\"button\" className=\"btn btn-secondary\">Cancel</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\n\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           \r\n        };\r\n\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n    }\r\n\r\n    handleEdit(item){\r\n        this.props.onClickEdit(item);\r\n    }\r\n\r\n    handleDelete(id){\r\n        this.props.onClickDelete(id);\r\n    }\r\n\r\n    render() {\r\n        const { item, index } = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td className=\"text-center\"> { index+1 } </td>\r\n                <td>{ item.name }</td>\r\n                <td className=\"text-center\">{ this.showElementLevel(item.level) }</td>\r\n                <td>\r\n                    <button onClick={()=>this.handleEdit(item)} type=\"button\" className=\"btn btn-warning\">Edit</button>\r\n                    <button onClick={()=>this.handleDelete(item.id)} type=\"button\" className=\"btn btn-danger\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    showElementLevel(level){\r\n        let elemLevel = <span className=\"badge badge-secondary\">Small</span>;\r\n        if(level === 1) {\r\n            elemLevel = <span className=\"badge badge-info\">Medium</span>;\r\n        } else if(level === 2) {\r\n            elemLevel = <span className=\"badge badge-danger\">High</span>;\r\n        } \r\n        return elemLevel;\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport Item from './Item';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           \r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        const  items   = this.props.items;\r\n        const elemItem = items.map((item, index) => {\r\n            return (\r\n                <Item \r\n                    key={index} item={item} index={ index } \r\n                    onClickEdit={ this.props.onClickEdit }\r\n                    onClickDelete={ this.props.onClickDelete }\r\n                /> \r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">List Task</div>\r\n                <table className=\"table table-hover \">\r\n                <thead>\r\n                    <tr>\r\n                    <th style={{width: '10%'}} className=\"text-center\">#</th>\r\n                    <th>Task</th>\r\n                    <th style={{width: '20%'}} className=\"text-center\">Level</th>\r\n                    <th style={{width: '160px'}}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { elemItem }\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Title from './components/Title';\nimport Control from './components/Control';\nimport Form from './components/Form';\nimport List from './components/List';\nimport { filter, includes, orderBy as funcOrderBy, remove, reject } from 'lodash';\n\n// import tasks from './mocks/tasks'\nimport Search from './components/Search';\n\nconst uuidv4 = require('uuid/v4');\n\nclass App extends Component {\n\n  state = {\n    items: [],\n    itemSelected: null,\n    isShowForm: false,\n    strSearch: '',\n    orderBy: 'name',\n    orderDir: 'asc'\n  };\n\n  constructor(props) {\n    super(props);\n\n    // this.state = {\n    //   items: [],\n    //   itemSelected: null,\n    //   isShowForm: false,\n    //   strSearch: '',\n    //   orderBy: 'name',\n    //   orderDir: 'asc'\n    // };\n\n    // this.handleToggleForm = this.handleToggleForm.bind(this);\n    this.closeForm = this.closeForm.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSort = this.handleSort.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  UNSAFE_componentWillMount(){\n    let items = JSON.parse(localStorage.getItem('task')) || [];\n    this.setState({\n        items       : items\n    })\n  }\n\n  handleSubmit(item) {\n    let items = [...this.state.items];\n    let id = null;\n    if(item.id) { // Edit\n      items = reject(items, { id: item.id });\n      id = item.id;\n    } else { // Add\n      id = uuidv4();\n    }\n\n    items.push({\n      id      : id,\n      name    : item.name,\n      level   : +item.level // 0 Small, 1 Medium, 2 High\n    });\n\n    this.setState({\n      items: items,\n      isShowForm: false\n    });\n\n    // Save\n    localStorage.setItem(\"task\", JSON.stringify(items));\n  }\n\n  handleEdit(item) {\n    this.setState({\n      itemSelected: item,\n      isShowForm: true\n    });\n  }\n\n  handleDelete(id) {\n    let items = [...this.state.items];\n    remove(items, (item)=> {\n        return item.id === id;\n    });\n    this.setState({\n        items: items\n    });\n    \n    // Save\n    localStorage.setItem(\"task\", JSON.stringify(items));\n  }\n\n  handleSort = (orderBy, orderDir) => {\n    this.setState({\n        orderBy: orderBy,\n        orderDir: orderDir\n    });\n}\n\n  handleToggleForm = () => {\n    this.setState({\n      isShowForm: !this.state.isShowForm,\n      itemSelected: null\n    })\n  }\n\n  handleSearch(value) {\n    this.setState({\n      strSearch: value\n    })\n  }\n\n  closeForm() {\n    this.setState({\n      isShowForm: false\n    })\n  }\n \n  render() {\n    let itemsOrigin = [...this.state.items];\n    let items       = [];\n    let elmForm = null;\n    let elmButton = <button onClick={this.handleToggleForm} type=\"button\" className=\"btn btn-info btn-block\">Add Task</button>;\n    let { orderBy, orderDir, isShowForm, strSearch, itemSelected } = this.state;\n\n    // Search\n    // if(search.length > 0) {\n    //   itemsOrigin.forEach((item) => {\n    //     if(item.name.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1) {\n    //       items.push(item);\n    //     }\n    //   })\n    // } else {\n    //   items = itemsOrigin;\n    // }\n    items = filter(itemsOrigin, (item) => {\n      return includes(item.name.toLowerCase(), strSearch.toLowerCase());\n    });\n\n    // Sort\n    items = funcOrderBy(items, [ orderBy ], [ orderDir ])\n\n    if(isShowForm) {\n      elmForm = <Form itemSelected={ itemSelected } onClickSubmit={ this.handleSubmit } onClickCancel={ this.closeForm } />;\n      elmButton = <button onClick={this.handleToggleForm} type=\"button\" className=\"btn btn-success btn-block\">Edit Task</button>;\n    }\n    \n\n    return (\n      <div>\n        <Title />\n        <div className=\"row\">\n          <Control\n            orderBy={ orderBy } \n            orderDir={ orderDir } \n            onClickSort={ this.handleSort }\n            onClickSearchGo={ this.handleSearch }\n          />\n          <div className=\"col-12 col-lg-6\">\n            <div className=\"form-group add-task\">\n            { elmButton }\n            </div>\n              { elmForm }\n          </div>\n        </div>\n        <List\n          onClickEdit={ this.handleEdit }\n          onClickDelete={ this.handleDelete }\n          items={ items } \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('main-content'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}